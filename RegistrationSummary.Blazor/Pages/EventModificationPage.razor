@page "/event/edit/{EventId:int}"
@page "/event/new"

@using Microsoft.JSInterop
@using RegistrationSummary.Blazor.ViewModels

@inject EventModificationPageViewModel Vm

@inject IJSRuntime JS

@code {
    [Parameter] public int? EventId { get; set; }

    protected override void OnInitialized()
    {
        Vm.Initialize(EventId);
        Vm.OnLogUpdated = () => InvokeAsync(StateHasChanged);
    }
}

<div>
    <h3 class="text-xl font-semibold mb-4">Edit Event</h3>

    <!-- Log Output -->
    <div class="pt-4">
        <div class="bg-gray-100 h-full border rounded font-mono text-sm whitespace-pre-wrap max-h-[300px] overflow-y-auto scroll-smooth">
            @foreach (var line in Vm.MessageLogLines)
            {
                <div class="@line.CssClass">@line.Text</div>
            }
        </div>
    </div>
</div>

<div class="bg-brand-gold rounded">

    <!-- GÅ‚Ã³wna sekcja (info + konfiguracja kolumn) -->
    <div class="grid grid-cols-2">
        <!-- SzczegÃ³Å‚y wydarzenia -->
        <div class="w-full p-2 border h-full">
            <div>
                <div>
                    <label class="block font-medium">Name</label>
                    <input class="input-field w-full" @bind="Vm.Event.Name" />
                </div>
                <div>
                    <label class="block font-medium">Start Date</label>
                    <input type="date" class="input-field w-full" @bind="Vm.Event.StartDate" />
                </div>
            </div>

            <div>
                <label class="block font-medium">Spreadsheet ID</label>
                <input class="input-field w-full" @bind="Vm.Event.SpreadsheetId" />
            </div>

            <div class="flex justify-center">
                <input type="checkbox" @bind="Vm.Event.CoursesAreMerged" class="scale-110 p-2" />
                <label class="block font-medium p-2">Courses are merged</label>
            </div>

            <div class="flex justify-center p-2">
                <button class="btn btn-secondary w-64" @onclick="Vm.CancelAsync">Cancel</button>
            </div>
            <div class="flex justify-center p-2">
                <button 
                    class="btn btn-primary w-64"
                    @onclick="Vm.SaveAsync"
                        disabled="@(Vm.HasUnsavedChanges == false)">
                    Save
                </button>
            </div>
        </div>

        <!-- Column Configuration -->
        <div class="border p-4">
            <h4 class="font-semibold text-center mb-3">Column Configuration</h4>
            <div class="grid grid-cols-2 gap-4">
                <!-- Raw -->
                <div>
                    <h5 class="text-sm font-semibold mb-2 text-center">Raw</h5>
                    @foreach (var prop in Vm.RawColumnBindings)
                    {
                        <input class="input-field w-full text-sm mb-1" placeholder="@prop.Label" @bind="@prop.Value" />
                    }
                </div>

                <!-- Preprocessed -->
                <div>
                    <h5 class="text-sm font-semibold mb-2 text-center">Preprocessed</h5>
                    @foreach (var prop in Vm.PreprocessedColumnBindings)
                    {
                        <input class="input-field w-full text-sm mb-1" placeholder="@prop.Label" @bind="@prop.Value" />
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="flex justify-center p-4">
        <button class="btn btn-secondary flex items-center gap-2" @onclick="Vm.AddCourse">
            <span class="text-lg">âž•</span>
            <span>Add Course</span>
        </button>
    </div>


    <!-- Courses -->
    @foreach (var course in Vm.Event.Courses)
    {
        <div class="border rounded bg-white p-3 mb-4 text-sm grid grid-cols-2 gap-x-6 gap-y-2 items-center max-w-[400px] mx-auto relative shadow-sm">

            <div>
                <label class="block font-medium mb-1">Code</label>
                <input class="input-field w-full" @bind="course.Code" />
            </div>

            <div>
                <label class="block font-medium mb-1">Name</label>
                <input class="input-field w-full" @bind="course.Name" />
            </div>

            <div>
                <label class="block font-medium mb-1">Day</label>
                <select class="input-field w-full" @bind="course.DayOfWeek">
                    <option value="Monday">Monday</option>
                    <option value="Tuesday">Tuesday</option>
                    <option value="Wednesday">Wednesday</option>
                    <option value="Thursday">Thursday</option>
                    <option value="Friday">Friday</option>
                    <option value="Saturday">Saturday</option>
                    <option value="Sunday">Sunday</option>
                </select>
            </div>

            <div>
                <label class="block font-medium mb-1">Time</label>
                <input type="time"
                       class="input-field w-full"
                       value="@course.Time.ToString(@"hh\:mm")"
                       @oninput="e => course.Time = TimeSpan.TryParse(e.Value?.ToString(), out var t) ? t : TimeSpan.Zero" />
            </div>

            <div>
                <label class="block font-medium mb-1">Start</label>
                <input type="date" class="input-field w-full" @bind="course.Start" />
            </div>

            <div>
                <label class="block font-medium mb-1">End</label>
                <input type="date" class="input-field w-full" @bind="course.End" />
            </div>

            <div class="col-span-2">
                <label class="block font-medium mb-1">Location</label>
                <input class="input-field w-full" @bind="course.Location" />
            </div>

            <div class="col-span-2">
                <label class="block font-medium mb-1">Comment</label>
                <input class="input-field w-full" @bind="course.AdditionalComment" />
            </div>

            <div class="col-span-2 flex gap-6 items-center mt-1">
                <label class="flex items-center gap-1">
                    <input type="checkbox" @bind="course.IsSolo" class="scale-110" />
                    Solo
                </label>
                <label class="flex items-center gap-1">
                    <input type="checkbox" @bind="course.IsShorter" class="scale-110" />
                    Shorter
                </label>
            </div>

            <button class="absolute bottom-2 right-2 text-sm text-red-600 hover:text-red-800"
                    @onclick="() => Vm.RemoveCourse(course)">
                ðŸ—‘ Remove
            </button>
        </div>
    }

</div>